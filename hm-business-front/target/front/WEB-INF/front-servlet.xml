<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.sz.hm"/>

    <!--静态文件缓存配置-->
    <mvc:resources mapping="/static/**" location="/static/">
        <mvc:cache-control max-age="3600" cache-public="true"/>
    </mvc:resources>
    <mvc:annotation-driven/>

    <!--velocity-->
    <!--
    This bean sets up the Velocity environment for us based on a root path for templates.
    Optionally, a properties file can be specified for more control over the Velocity
    environment, but the defaults are pretty sane for file based template loading.
    -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
        <property name="velocityPropertiesMap">
            <map>
                <entry key="input.encoding" value="UTF-8"/>
                <entry key="contentType" value="text/html;charset=UTF-8"/>
                <entry key="velocimacro.library" value="macro.vm"/>
                <entry key="velocimacro.library.autoreload" value="true"/>
            </map>
        </property>
    </bean>

    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">

        <property name="prefix" value="views/"/>
        <property name="suffix" value=".vm"/>

        <property name="order" value="0"/>
        <property name="cache" value="true"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="layoutUrl" value="layout/blank.vm"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/velocity/velocity-toolbox.xml"/>

        <property name="exposeSpringMacroHelpers" value="true"/>

        <property name="allowSessionOverride" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>

        <property name="allowRequestOverride" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>

        <property name="requestContextAttribute" value="requestContext"/>

        <property name="exposeContextBeansAsAttributes" value="true"/>

    </bean>
    
	<bean id="htmlViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="/web" />
		<property name="suffix" value=".html" />
		<property name="order" value="1"/>
	</bean>
	
    <import resource="classpath*:/spring/dataSource.xml"></import>

</beans>